#!/usr/bin/perl -CS

use strict;
use warnings;
use feature 'say';

use Net::LastFM;
use Getopt::Long;

my ($username, $min, $max) = qw[davorg 500 1000];

if (@ARGV == 1) {
  $username = shift;
} else {
  my %opts;
  GetOptions(\%opts, 'user=s', 'min=i', 'max=i');
  $opts{user} and $username = $opts{user};
  $opts{min}  and $min      = $opts{min};
  $opts{max}  and $max      = $opts{max};
}

my $artist = pickartist($username, $min, $max);

say "$artist->[0] ($artist->[1])";

sub pickartist {
  my ($username, $min, $max) = @_;

  my $method   = 'user.getTopArtists';
  my $page     = 1;

  my $lastfm = Net::LastFM->new(
    api_key    => $ENV{LASTFM_API_KEY},
    api_secret => $ENV{LASTFM_SECRET},
  );

  my (@artists, $data);

  do {
    $data = $lastfm->request_signed(
      method => $method,
      user   => $username,
      page   => $page,
    );

    for (@{$data->{topartists}{artist}}) {
      next if $_->{playcount} >= $max;
      next if $_->{playcount} <= $min;

      push @artists, [ $_->{name}, $_->{playcount} ];
    }

    ++$page;
  } until $data->{topartists}{artist}[-1]{playcount} < $min;

  return $artists[ rand @artists ];
}
